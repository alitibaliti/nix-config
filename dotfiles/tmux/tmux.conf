# ============================================= #
# Start with defaults from the Sensible plugin  #
# --------------------------------------------- #
# run-shell /nix/store/xfcdrc5gyggkrv3x35m0dkbkndljxwj1-tmuxplugin-sensible-unstable-2017-09-05/share/tmux-plugins/sensible/sensible.tmux
# ============================================= #

set  -g default-terminal "screen"
set  -g base-index      1
setw -g pane-base-index 1
# We need to set default-shell before calling new-session
# set  -g default-shell "/nix/store/w28hra3svjp3pxp7kpf9msdwmqvrlg7n-fish-3.6.0/bin/fish"

new-session



set -g status-keys emacs
set -g mode-keys   emacs



# rebind main key: `
unbind C-b
set -g prefix `
bind -N "Send the prefix key through to the application" \
  ` send-prefix




set  -g mouse             off
setw -g aggressive-resize on
setw -g clock-mode-style  12
set  -s escape-time       0
set  -g history-limit     2000

# ============================================= #
# Load plugins with Home Manager                #
# --------------------------------------------- #

# tmuxplugin-better-mouse-mode
# ---------------------

# run-shell /nix/store/pjxd7zdcqi22hszk0f666x0hkrwpzr2a-tmuxplugin-better-mouse-mode-unstable-2021-08-02/share/tmux-plugins/better-mouse-mode/scroll_copy_mode.tmux

# ============================================= #

      # https://old.reddit.com/r/tmux/comments/mesrci/tmux_2_doesnt_seem_to_use_256_colors/
            set -g default-terminal "xterm-256color"
            set -ga terminal-overrides ",*256col*:Tc"
            set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'
            set-environment -g COLORTERM "truecolor"

# Style
set -g status-style 'bg=#333333 fg=#5eacd3'

set -g focus-events on

# force tmux to use utf-8
setw -gq utf8 on

# default window title colors
set-window-option -g window-status-style fg=colour244,bg=default,dim # fg=base0

# active window title colors
set-window-option -g window-status-current-style fg=colour166,bg=default,bright # fg=orange

# pane border
set-option -g pane-border-style fg=colour235 #fg=base02
set-option -g pane-active-border-style fg=colour240 #fg=base01

# message text
set-option -g message-style bg=colour235,fg=colour166 # bg=base02, fg=orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange
# clock
set-window-option -g clock-mode-colour green #green


set -g status-interval 1
set -g status-justify centre # center align window list
set -g status-left-length 20
set -g status-right-length 140
set -g status-left '#[fg=green]#H #[fg=black]â€¢ #[fg=green,bright]#(uname -r | cut -c 1-6)#[default]'
set -g status-right '#[fg=green,bg=default,bright]#(tmux-mem-cpu-load) #[fg=red,dim,bg=default]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=white,bg=default]%A %l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d'


      # Mouse works as expected
            set-option -g mouse on

      # reload configuration
            bind r source-file ~/.config/tmux/tmux.conf \; display '~/.config/tmux/tmux.conf sourced'
            bind-key k kill-session

      # easy-to-remember split pane commands
      #bind | split-window -h -c "#{pane_current_path}"
      #bind \\ split-window -h -c "#{pane_current_path}"
      bind \\ split-window -h
      bind - split-window -v -c "#{pane_current_path}"
      bind c new-window -c "#{pane_current_path}"

      # smart pane switching with awareness of vim splits
       #there is a new way to configure it. Don't know why, let's try to see if works
       bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
       bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
       bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
       bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
       #bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# ctrl-L is mapped so use <prefix> ctrl-L for 'clear screen'
bind C-l send-keys 'C-l'

# Airline theme (generated by Vim's plugin Tmuxline)
if-shell "test -f [file]" "source tmux_airline_theme"
